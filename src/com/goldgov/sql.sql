---- ER/Studio Data Architect SQL Code Generation-- Company :      LHG-- Project :      Model1.DM1-- Author :       LHG---- Date Created : Wednesday, August 26, 2020 15:36:54-- Target DBMS : MySQL 5.x------ TABLE: EXAM_APPROVAL--CREATE TABLE EXAM_APPROVAL(    APPROVAL_ID        VARCHAR(50)    NOT NULL,    EXAM_ID            VARCHAR(50)    NOT NULL,    EXAMINEE_ID        VARCHAR(50)    NOT NULL,    APPROVAL_STATE     INT,    START_DATE         DATETIME,    END_DATE           DATETIME,    APPROVAL_RESULT    INT,    PRIMARY KEY (APPROVAL_ID))ENGINE=MYISAM;---- TABLE: EXAM_APPROVAL_TACHE--CREATE TABLE EXAM_APPROVAL_TACHE(    TACHE_ID                 VARCHAR(50)     NOT NULL,    APPROVAL_ID              VARCHAR(50)     NOT NULL,    TACHE_CODE               VARCHAR(100),    APPROVAL_DATE            DATETIME,    COMMENT                  VARCHAR(500),    APPROVAL_RESULT          INT,    APPROVER_ASSOCIATE_ID    VARCHAR(50),    APPROVER_NAME            VARCHAR(100),    PRIMARY KEY (TACHE_ID))ENGINE=MYISAM;---- TABLE: EXAM_ASSIGNMENT_RULE--CREATE TABLE EXAM_ASSIGNMENT_RULE(    RULE_ID         VARCHAR(50)    NOT NULL,    PAPER_ID        VARCHAR(50)    NOT NULL,    QUESTION_NUM    INT,    EACH_SCORE      INT,    PRIMARY KEY (RULE_ID))ENGINE=MYISAM;---- TABLE: EXAM_ASSIGNMENT_RULE_VALUE--CREATE TABLE EXAM_ASSIGNMENT_RULE_VALUE(    RULE_VALUE_ID    VARCHAR(50)     NOT NULL,    RULE_ID          VARCHAR(50)     NOT NULL,    RULE_NAME        VARCHAR(100),    RULE_VALUE       VARCHAR(100),    PRIMARY KEY (RULE_VALUE_ID))ENGINE=MYISAM;---- TABLE: EXAM_ATTACHED_PAPER_QUESTION--CREATE TABLE EXAM_ATTACHED_PAPER_QUESTION(    PAPER_QUESTION_ID    VARCHAR(50)    NOT NULL,    PAPER_ID             VARCHAR(50)    NOT NULL,    QUESTION_ID          VARCHAR(50)    NOT NULL,    QUESTION_SCORE       INT,    ORDER_NUM            INT,    PRIMARY KEY (PAPER_QUESTION_ID))ENGINE=MYISAM;---- TABLE: EXAM_CATEGORY--CREATE TABLE EXAM_CATEGORY(    CATEGORY_ID      VARCHAR(50)     NOT NULL,    PARENT_ID        VARCHAR(50)     NOT NULL,    CATEGORY_NAME    VARCHAR(100),    NODE_PATH        VARCHAR(500),    NODE_VALUE       INT,    ORDER_NUM        INT,    PRIMARY KEY (CATEGORY_ID))ENGINE=MYISAM;---- TABLE: EXAM_CERTIFICATE--CREATE TABLE EXAM_CERTIFICATE(    RELEVANCE_ID         VARCHAR(50)     NOT NULL,    TEMP_ID              VARCHAR(50),    ISSUE_TYPE           TINYINT,    CERTIFICATE_NAME     VARCHAR(100),    CERTIFICATE_TYPE     TINYINT,    CERTIFICATE_SCORE    INT,    EXAM_ID              VARCHAR(50),    PRIMARY KEY (RELEVANCE_ID))ENGINE=MYISAM;---- TABLE: EXAM_CHANGE_LOG--CREATE TABLE EXAM_CHANGE_LOG(    LOG_ID           VARCHAR(50)     NOT NULL,    PAPER_ID         VARCHAR(50)     NOT NULL,    CHANGE_TYPE      INT,    CHANGE_SCOPE     INT,    CHANGE_REASON    VARCHAR(500),    BEFORE_DATA      VARCHAR(200),    AFTER_DATA       VARCHAR(200),    PRIMARY KEY (LOG_ID))ENGINE=MYISAM;---- TABLE: EXAM_CHOICE_QUESTION_ITEM--CREATE TABLE EXAM_CHOICE_QUESTION_ITEM(    ITEM_ID             VARCHAR(50)     NOT NULL,    QUESTION_ID         VARCHAR(50)     NOT NULL,    ITEM_CONTENT        VARCHAR(500),    ITEM_IMAGE_ID       VARCHAR(50),    ITEM_TYPE           INT,    ANSWER_ORDER_NUM    INT,    IS_RIGHT_ANSWER     INT,    ORDER_NUM           INT,    PRIMARY KEY (ITEM_ID))ENGINE=MYISAM;---- TABLE: EXAM_ENTER_POSITION--CREATE TABLE EXAM_ENTER_POSITION(    POSITION_ID    VARCHAR(50)     NOT NULL,    POSITION       VARCHAR(100),    EXAM_ID        VARCHAR(50)     NOT NULL,    PRIMARY KEY (POSITION_ID))ENGINE=MYISAM;---- TABLE: EXAM_EXAMINEE--CREATE TABLE EXAM_EXAMINEE(    EXAMINEE_ID              VARCHAR(50)     NOT NULL,    EXAM_ID                  VARCHAR(50)     NOT NULL,    EXAMINEE_ASSOCIATE_ID    VARCHAR(50),    EXAMINEE_NAME            VARCHAR(100),    EXAMINEE_STATE           INT,    EXAMINEE_EXAM_STATE      INT,    CER_ISSUE_STATE          TINYINT,    MAX_SCORE                INT,    RECALL_COMMENT           VARCHAR(500),    CORRECT_EXAM_END_DATE    DATETIME,    PRIMARY KEY (EXAMINEE_ID))ENGINE=MYISAM;---- TABLE: EXAM_EXAMINEE_ANSWER--CREATE TABLE EXAM_EXAMINEE_ANSWER(    EXAMINEE_ANSWER_ID    VARCHAR(50)     NOT NULL,    EXAMINEE_PAPER_ID     VARCHAR(50)     NOT NULL,    QUESTION_ID           VARCHAR(50)     NOT NULL,    ANSWER_SCORE          INT,    IS_RIGHT              INT,    COMMENT               VARCHAR(500),    PRIMARY KEY (EXAMINEE_ANSWER_ID))ENGINE=MYISAM;---- TABLE: EXAM_EXAMINEE_ANSWER_ITEM--CREATE TABLE EXAM_EXAMINEE_ANSWER_ITEM(    ANSWER_ITEM_ID        VARCHAR(50)     NOT NULL,    EXAMINEE_ANSWER_ID    VARCHAR(50)     NOT NULL,    ITEM_ID               VARCHAR(50),    ANSWER_CONTENT        VARCHAR(500),    ANSWER_ORDER_NUM      INT,    PRIMARY KEY (ANSWER_ITEM_ID))ENGINE=MYISAM;---- TABLE: EXAM_EXAMINEE_PAPER--CREATE TABLE EXAM_EXAMINEE_PAPER(    EXAMINEE_PAPER_ID        VARCHAR(50)    NOT NULL,    EXAMINEE_ID              VARCHAR(50)    NOT NULL,    PAPER_ID                 VARCHAR(50)    NOT NULL,    EXAM_SECONDS             INT,    SAVE_DATE                DATETIME,    OPEN_DATE                DATETIME,    CACHE_CODE               VARCHAR(50),    START_DATE               DATETIME,    SUBMIT_DATE              DATETIME,    PAPER_STATE              INT,    SCORE                    INT,    IS_PASS                  INT,    SAVE_NUM                 INT,    IS_CHEAT                 INT,    LEAVE_NUM                INT,    FORCE_SUBMIT             INT,    CORRECT_EXAM_END_DATE    DATETIME,    PRIMARY KEY (EXAMINEE_PAPER_ID))ENGINE=MYISAM;---- TABLE: EXAM_EXAMINEE_PAPER_MARK--CREATE TABLE EXAM_EXAMINEE_PAPER_MARK(    PAPER_MARK_ID        VARCHAR(50)    NOT NULL,    EXAMINEE_PAPER_ID    VARCHAR(50)    NOT NULL,    MARKER_ID            VARCHAR(50)    NOT NULL,    QUESTION_ID          VARCHAR(50),    MARK_DATE            DATETIME,    MARK_STATE           INT,    PRIMARY KEY (PAPER_MARK_ID))ENGINE=MYISAM;---- TABLE: EXAM_EXERCISE--CREATE TABLE EXAM_EXERCISE(    EXERCISE_ID       VARCHAR(50)     NOT NULL,    CATEGORY_ID       VARCHAR(50),    EXERCISE_NAME     VARCHAR(200),    CREATE_DATE       DATETIME,    EXERCISE_STATE    INT,    SCOPE_CODE        VARCHAR(50),    EXERCISE_TYPE     INT,    PRIMARY KEY (EXERCISE_ID))ENGINE=MYISAM;---- TABLE: EXAM_EXERCISE_ASSOCIATION--CREATE TABLE EXAM_EXERCISE_ASSOCIATION(    ASSOCIATION_ID    VARCHAR(50)    NOT NULL,    EXERCISE_ID       VARCHAR(50)    NOT NULL,    EXAM_ID           VARCHAR(50)    NOT NULL,    PRIMARY KEY (ASSOCIATION_ID))ENGINE=MYISAM;---- TABLE: EXAM_EXERCISE_CATEGORY--CREATE TABLE EXAM_EXERCISE_CATEGORY(    EXERCISE_CATEGORY_ID    VARCHAR(50)    NOT NULL,    CATEGORY_ID             VARCHAR(50)    NOT NULL,    EXERCISE_ID             VARCHAR(50)    NOT NULL,    PRIMARY KEY (EXERCISE_CATEGORY_ID))ENGINE=MYISAM;---- TABLE: EXAM_EXERCISE_CLASSIFY--CREATE TABLE EXAM_EXERCISE_CLASSIFY(    CATEGORY_ID      VARCHAR(50)     NOT NULL,    PARENT_ID        VARCHAR(50)     NOT NULL,    CATEGORY_NAME    VARCHAR(100),    NODE_PATH        VARCHAR(500),    NODE_VALUE       INT,    ORDER_NUM        INT,    PRIMARY KEY (CATEGORY_ID))ENGINE=MYISAM;---- TABLE: EXAM_EXERCISE_MANAGEMENT_SCOPE--CREATE TABLE EXAM_EXERCISE_MANAGEMENT_SCOPE(    SCOPE_ID       VARCHAR(50)     NOT NULL,    EXERCISE_ID    VARCHAR(50)     NOT NULL,    ORG_NAME       VARCHAR(200),    SCOPE_CODE     VARCHAR(100),    PRIMARY KEY (SCOPE_ID))ENGINE=MYISAM;---- TABLE: EXAM_EXERCISE_QUESTION--CREATE TABLE EXAM_EXERCISE_QUESTION(    EXERCISE_QUESTION_ID    VARCHAR(50)    NOT NULL,    EXERCISE_ID             VARCHAR(50)    NOT NULL,    QUESTION_ID             VARCHAR(50)    NOT NULL,    PRIMARY KEY (EXERCISE_QUESTION_ID))ENGINE=MYISAM;---- TABLE: EXAM_EXERCISE_RECORD--CREATE TABLE EXAM_EXERCISE_RECORD(    RECORD_ID               VARCHAR(50)    NOT NULL,    EXERCISE_ID             VARCHAR(50)    NOT NULL,    QUESTION_ID             VARCHAR(50)    NOT NULL,    IS_CURRENT_QUESTION     INT,    RIGHT_NUM               INT,    WRONG_NUM               INT,    LAST_ANSWER_RESULT      INT,    LAST_ANSWER_DATE        DATETIME,    USER_ASSOCIATE_ID       VARCHAR(50),    EXERCISE_CATEGORY_ID    VARCHAR(50),    PRIMARY KEY (RECORD_ID))ENGINE=MYISAM;---- TABLE: EXAM_FILL_QUESTION_ITEM--CREATE TABLE EXAM_FILL_QUESTION_ITEM(    ITEM_ID         VARCHAR(50)     NOT NULL,    QUESTION_ID     VARCHAR(50)     NOT NULL,    RIGHT_ANSWER    VARCHAR(500),    ITEM_SCORE      INT,    ITEM_TITLE      VARCHAR(500),    ORDER_NUM       INT,    PRIMARY KEY (ITEM_ID))ENGINE=MYISAM;---- TABLE: EXAM_MARKER--CREATE TABLE EXAM_MARKER(    MARKER_ID              VARCHAR(50)     NOT NULL,    EXAM_ID                VARCHAR(50)     NOT NULL,    MARKER_ASSOCIATE_ID    VARCHAR(50),    MARKER_NAME            VARCHAR(100),    MARKER_RATIO           INT,    PRIMARY KEY (MARKER_ID))ENGINE=MYISAM;---- TABLE: EXAM_OPERATION_LOG--CREATE TABLE EXAM_OPERATION_LOG(    LOG_ID         VARCHAR(50)     NOT NULL,    LOG_CONTENT    VARCHAR(500),    LOG_CODE       VARCHAR(100),    RELATION_ID    VARCHAR(50),    CREATE_DATE    DATETIME,    PRIMARY KEY (LOG_ID))ENGINE=MYISAM;---- TABLE: EXAM_ORG_APPLY--CREATE TABLE EXAM_ORG_APPLY(    APPLY_ID       VARCHAR(50)     NOT NULL,    EXAM_ID        VARCHAR(50)     NOT NULL,    SCOPE_CODE     VARCHAR(100),    ORG_NAME       VARCHAR(200),    APPLY_QUOTA    INT,    PRIMARY KEY (APPLY_ID))ENGINE=MYISAM;---- TABLE: EXAM_PAPER--CREATE TABLE EXAM_PAPER(    PAPER_ID                VARCHAR(50)    NOT NULL,    EXAM_ID                 VARCHAR(50)    NOT NULL,    EXAM_DURATION           INT,    TOTAL_SCORE             INT,    PASS_SCORE              INT,    QUESTION_ORDER_TYPE     INT,    IS_SHOW_ANSWER          INT,    REPEAT_EXAM_NUM         INT,    CAN_REPEAT_EXAM         INT,    IS_AUTO_MARK            INT,    SHOW_MODE               INT,    LEAVE_PAPER_QUOTA       INT,    ENABLE_PREVENT_CHEAT    INT,    TIME_LIMIT_TYPE         INT,    PAPER_TYPE              INT,    CAN_ORIGINAL_EXAM       TINYINT,    IS_DIFFICULT_CHOOSE     TINYINT,    PRIMARY KEY (PAPER_ID))ENGINE=MYISAM;---- TABLE: EXAM_PAPER_CHANGE--CREATE TABLE EXAM_PAPER_CHANGE(    PAPER_CHANGE_ID      VARCHAR(50)    NOT NULL,    EXAMINEE_PAPER_ID    VARCHAR(50)    NOT NULL,    LOG_ID               VARCHAR(50)    NOT NULL,    PRIMARY KEY (PAPER_CHANGE_ID))ENGINE=MYISAM;---- TABLE: EXAM_QUESTION--CREATE TABLE EXAM_QUESTION(    QUESTION_ID         VARCHAR(50)     NOT NULL,    CATEGORY_ID         VARCHAR(50)     NOT NULL,    QUESTION_CONTENT    VARCHAR(500),    QUESTION_IMAGE      VARCHAR(50),    QUESTION_TYPE       VARCHAR(20),    DIFFICULT           INT,    QUESTION_RESOLVE    VARCHAR(500),    QUESTION_SOURCE     INT,    QUESTION_STATE      INT,    CREATE_DATE         TIMESTAMP       NOT NULL,    CREATE_USER         VARCHAR(50),    CREATE_USER_ID      VARCHAR(50),    USE_FREQUENCY       INT,    SCOPE_TYPE          INT,    SCOPE_CODE          VARCHAR(100),    DESCRIPTION         TEXT,    PRIMARY KEY (QUESTION_ID))ENGINE=MYISAM;---- TABLE: EXAM_QUESTION_CATEGORY--CREATE TABLE EXAM_QUESTION_CATEGORY(    CATEGORY_ID      VARCHAR(50)     NOT NULL,    PARENT_ID        VARCHAR(50)     NOT NULL,    CATEGORY_NAME    VARCHAR(100),    NODE_PATH        VARCHAR(500),    NODE_VALUE       INT,    ORDER_NUM        INT,    CATEGORG_TYPE    INT,    SCOPE_CODE       VARCHAR(100),    PRIMARY KEY (CATEGORY_ID))ENGINE=MYISAM;---- TABLE: EXAM_QUESTION_CATEGORY_RELEVANCE--CREATE TABLE EXAM_QUESTION_CATEGORY_RELEVANCE(    CATEGORY_ID     VARCHAR(50)    NOT NULL,    RECOMMEND_ID    VARCHAR(50)    NOT NULL,    PRIMARY KEY (CATEGORY_ID))ENGINE=MYISAM;---- TABLE: EXAM_QUESTION_FAVORITES--CREATE TABLE EXAM_QUESTION_FAVORITES(    FAVORITES_ID         VARCHAR(50)    NOT NULL,    QUESTION_ID          VARCHAR(50)    NOT NULL,    CREATE_DATE          DATETIME,    USER_ASSOCIATE_ID    VARCHAR(50),    PRIMARY KEY (FAVORITES_ID))ENGINE=MYISAM;---- TABLE: EXAM_QUESTION_TAG--CREATE TABLE EXAM_QUESTION_TAG(    QUESTION_TAG_ID    VARCHAR(50)    NOT NULL,    QUESTION_ID        VARCHAR(50)    NOT NULL,    TAG_ID             VARCHAR(50)    NOT NULL,    PRIMARY KEY (QUESTION_TAG_ID))ENGINE=MYISAM;---- TABLE: EXAM_QUESTION_TYPE--CREATE TABLE EXAM_QUESTION_TYPE(    QUESTION_TYPE_ID       VARCHAR(50)    NOT NULL,    QUESTION_TYPE          VARCHAR(20),    QUESTION_TYPE_ORDER    INT,    PRIMARY KEY (QUESTION_TYPE_ID))ENGINE=MYISAM;---- TABLE: EXAM_SCHEDULE--CREATE TABLE EXAM_SCHEDULE(    EXAM_ID                 VARCHAR(50)      NOT NULL,    ASSIGN_ORGINATION       INT,    CATEGORY_ID             VARCHAR(50)      NOT NULL,    EXAM_NAME               VARCHAR(200),    DESCRIPTION             VARCHAR(1000),    EXAM_START_DATE         DATETIME,    EXAM_END_DATE           DATETIME,    EXAMINEE_QUOTA          INT,    EXAM_TYPE               INT,    ENTER_TYPE              INT,    EXAM_STATE              INT,    ENTER_START_DATE        DATETIME,    ENTER_END_DATE          DATETIME,    IS_REVIEW               INT,    IS_PUBLISH_ANSWER       INT,    SCOPE_CODE              VARCHAR(100),    CREATE_DATE             DATETIME,    CERTIFICATE_LAST_NUM    INT,    EXAM_KIND               TINYINT,    CREATE_USER_ID          VARCHAR(50),    CREATE_USER_NAME        VARCHAR(100),    IS_ENABLE               INT,    EXAM_PLACE_NAME         VARCHAR(1000),    EXAM_DEPT_ID            VARCHAR(100),    EXAM_DEPT_NAME          VARCHAR(1000),    APPLY_EXAM_NAME         VARCHAR(200),    AGENT                   VARCHAR(100),    AGENT_DUTY              VARCHAR(100),    PRIMARY KEY (EXAM_ID))ENGINE=MYISAM;---- TABLE: EXAM_TAG--CREATE TABLE EXAM_TAG(    TAG_ID      VARCHAR(50)     NOT NULL,    TAG_NAME    VARCHAR(100),    PRIMARY KEY (TAG_ID))ENGINE=MYISAM;---- TABLE: EXAM_WRONG_QUESTION--CREATE TABLE EXAM_WRONG_QUESTION(    WRONG_QUESTION_ID        VARCHAR(50)     NOT NULL,    QUESTION_ID              VARCHAR(50)     NOT NULL,    WRONG_COUNT              INT,    WRONG_QUESTION_SOURCE    INT,    USER_ASSOCIATE_ID        VARCHAR(50),    CREATE_DATE              DATETIME,    LAST_ANSWER_DATE         DATETIME,    SOURCE_ID                VARCHAR(50),    SOURCE_NAME              VARCHAR(200),    PRIMARY KEY (WRONG_QUESTION_ID))ENGINE=MYISAM;